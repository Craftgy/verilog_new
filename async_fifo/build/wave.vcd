$date
	Sat Mar  5 22:49:00 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module async_fifo_tb $end
$var wire 4 ! rd_data [3:0] $end
$var wire 1 " full $end
$var wire 1 # empty $end
$var wire 1 $ afull $end
$var wire 1 % aempty $end
$var reg 1 & rd_clk $end
$var reg 1 ' rd_en $end
$var reg 1 ( rd_rst_n $end
$var reg 1 ) wr_clk $end
$var reg 4 * wr_data [3:0] $end
$var reg 1 + wr_en $end
$var reg 1 , wr_rst_n $end
$scope module async_fifo_dut $end
$var wire 4 - rd_addr_gray_nxt [3:0] $end
$var wire 1 & rd_clk $end
$var wire 1 ' rd_en $end
$var wire 1 ( rd_rst_n $end
$var wire 1 . rd_vld $end
$var wire 4 / wr_addr_gray_nxt [3:0] $end
$var wire 1 ) wr_clk $end
$var wire 4 0 wr_data [3:0] $end
$var wire 1 + wr_en $end
$var wire 1 , wr_rst_n $end
$var wire 1 1 wr_vld $end
$var wire 4 2 wr_addr_gray_rsyn_bin [3:0] $end
$var wire 4 3 wr_addr_gray_rsyn [3:0] $end
$var wire 4 4 rd_data [3:0] $end
$var wire 4 5 rd_addr_gray_wsyn_bin [3:0] $end
$var wire 4 6 rd_addr_gray_wsyn [3:0] $end
$var wire 1 7 full_comb $end
$var wire 4 8 fifo_used_wr [3:0] $end
$var wire 4 9 fifo_used_rd [3:0] $end
$var wire 1 : empty_comb $end
$var wire 1 ; afull_comb $end
$var wire 1 < aempty_comb $end
$var reg 1 % aempty $end
$var reg 1 $ afull $end
$var reg 1 # empty $end
$var reg 1 " full $end
$var reg 4 = rd_addr [3:0] $end
$var reg 4 > rd_addr_gray [3:0] $end
$var reg 4 ? rd_addr_gray_wsyn1 [3:0] $end
$var reg 4 @ rd_addr_gray_wsyn2 [3:0] $end
$var reg 4 A rd_addr_nxt [3:0] $end
$var reg 4 B wr_addr [3:0] $end
$var reg 4 C wr_addr_gray [3:0] $end
$var reg 4 D wr_addr_gray_rsyn1 [3:0] $end
$var reg 4 E wr_addr_gray_rsyn2 [3:0] $end
$var reg 4 F wr_addr_nxt [3:0] $end
$scope begin genblk1[0] $end
$scope begin genblk3 $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$scope begin genblk3 $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$scope begin genblk3 $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$scope begin genblk4[0] $end
$scope begin genblk6 $end
$upscope $end
$upscope $end
$scope begin genblk4[1] $end
$scope begin genblk6 $end
$upscope $end
$upscope $end
$scope begin genblk4[2] $end
$scope begin genblk6 $end
$upscope $end
$upscope $end
$scope begin genblk4[3] $end
$scope begin genblk5 $end
$upscope $end
$upscope $end
$scope module dualport_ram_inst $end
$var wire 3 G rd_addr [2:0] $end
$var wire 1 & rd_clk $end
$var wire 1 . rd_en $end
$var wire 1 ( rd_rst_n $end
$var wire 3 H wr_addr [2:0] $end
$var wire 1 ) wr_clk $end
$var wire 4 I wr_data [3:0] $end
$var wire 1 1 wr_en $end
$var wire 1 , wr_rst_n $end
$var reg 4 J rd_data [3:0] $end
$var integer 32 K II [31:0] $end
$upscope $end
$upscope $end
$scope task rd_task $end
$upscope $end
$scope task wr_task $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1000 K
b0 J
bx I
b0 H
b0 G
b0 F
b0 E
b0 D
b0 C
b0 B
b0 A
b0 @
b0 ?
b0 >
b0 =
1<
0;
1:
b0 9
b0 8
07
b0 6
b0 5
b0 4
b0 3
b0 2
01
bx 0
b0 /
0.
b0 -
0,
0+
bx *
0)
0(
0'
0&
0%
0$
0#
0"
b0 !
$end
#5
b1000 K
1)
#10
0)
#15
b1000 K
1)
#20
0)
1&
#25
b1000 K
1)
#30
0)
#35
b1000 K
1)
#40
0)
0&
#45
b1000 K
1)
#50
1#
0)
1(
1,
#55
1)
#60
1%
0)
1&
#65
1)
#70
0)
#75
1)
#80
0)
0&
#85
1)
#90
0)
#95
1)
#100
0)
1&
#105
b1 /
b1 8
b1 F
11
b1010 *
b1010 0
b1010 I
1+
1)
#110
0)
#115
b11 /
b10 8
b10 F
b1 H
b1 B
b1 C
b1011 *
b1011 0
b1011 I
1)
#120
0)
0&
#125
b10 /
b11 8
b11 F
b10 H
b11 C
b10 B
b1100 *
b1100 0
b1100 I
1)
#130
0)
#135
b110 /
b100 8
b100 F
b11 H
b11 B
b10 C
b1101 *
b1101 0
b1101 I
1)
#140
b10 D
0)
1&
#145
b111 /
b101 8
b101 F
b100 H
b110 C
b100 B
b1110 *
b1110 0
b1110 I
1)
#150
0)
#155
b101 /
b110 8
b110 F
b101 H
b101 B
b111 C
b1111 *
b1111 0
b1111 I
1)
#160
0)
0&
#165
b110 H
01
b101 C
b110 B
0+
1)
#170
0)
#175
b100 /
1;
b111 8
b111 F
11
1+
1)
#180
0<
b11 9
b11 2
0:
b10 3
b10 E
b101 D
0)
1&
#185
17
b1100 /
b1000 8
b1000 F
b111 H
1$
b100 C
b111 B
1)
#190
0)
#195
17
b1100 /
01
b1000 8
b1000 F
b0 H
b1000 B
b1100 C
1"
1)
#200
0)
0&
#205
1)
#210
0)
#215
1)
#220
b111 9
b111 2
b101 3
b101 E
b1100 D
0%
0#
0)
1&
#225
1)
#230
0)
#235
b1010 *
b1010 0
b1010 I
1)
#240
0)
0&
#245
b1011 *
b1011 0
b1011 I
1)
#250
0)
#255
0+
1)
#260
b1010 9
b1010 2
b1100 3
b1100 E
0)
1&
#265
1)
#270
0)
#275
1)
#280
0)
0&
#285
1)
#290
0)
#295
1)
#300
0)
1&
#305
1)
#310
0)
#315
1)
#320
0)
0&
#325
1)
#330
0)
#335
1)
#340
0)
1&
#345
1)
#350
0)
#355
1)
#360
0)
0&
#365
1)
#370
0)
#375
1)
#380
b1 -
b1001 9
b1 A
1.
1'
0)
1&
#385
1)
#390
0)
#395
1)
#400
0)
0&
#405
1)
#410
0)
#415
1)
#420
b11 -
b1000 9
b10 A
b1 G
b1 >
b1 =
b1010 !
b1010 4
b1010 J
0)
1&
#425
b1 ?
1)
#430
0)
#435
b111 8
b1 5
07
b1 6
b1 @
1)
#440
0)
0&
#445
0"
1)
#450
0)
#455
1)
#460
b10 -
b111 9
b11 A
b10 G
b10 =
b11 >
b1011 !
b1011 4
b1011 J
0)
1&
#465
b11 ?
1)
#470
0)
#475
0;
b110 8
b10 5
b11 6
b11 @
1)
#480
0)
0&
#485
0$
1)
#490
0)
#495
1)
#500
b110 -
b110 9
b100 A
b11 G
b10 >
b11 =
b1100 !
b1100 4
b1100 J
0)
1&
#505
b10 ?
1)
#510
0)
#515
b101 8
b11 5
b10 6
b10 @
1)
#520
0)
0&
#525
1)
#530
0)
#535
1)
#540
b111 -
b101 9
b101 A
b100 G
b100 =
b110 >
b1101 !
b1101 4
b1101 J
0)
1&
#545
b110 ?
1)
#550
0)
#555
0;
b11 8
b101 5
b110 6
b110 @
1)
#560
0)
0&
#565
1)
#570
0)
#575
1)
#580
b101 G
0.
b111 >
b101 =
0'
b1110 !
b1110 4
b1110 J
0)
1&
#585
b111 ?
1)
#590
0)
#595
b100 8
b100 5
b111 6
b111 @
1)
#600
0)
0&
#605
1)
#610
0)
#615
1)
#620
b101 -
b100 9
b110 A
1.
1'
0)
1&
#625
1)
#630
0)
#635
1)
#640
0)
0&
#645
1)
#650
0)
#655
1)
#660
b110 G
0.
b101 >
b110 =
0'
b1111 !
b1111 4
b1111 J
0)
1&
#665
b101 ?
1)
#670
0)
#675
b1 8
b111 5
b101 6
b101 @
1)
#680
0)
0&
#685
1)
#690
0)
#695
1)
#700
b100 -
b11 9
b111 A
1.
1'
0)
1&
#705
1)
#710
0)
#715
1)
#720
0)
0&
#725
1)
#730
0)
#735
1)
#740
1:
b1100 -
b10 9
b1000 A
b111 G
b100 >
b111 =
0)
1&
#745
b100 ?
1)
#750
0)
#755
b10 8
b110 5
b100 6
b100 @
1)
#760
0)
0&
#765
1)
#770
0)
#775
1)
#780
1:
b1100 -
0.
0<
b10 9
b1000 A
b0 G
b1000 =
b1100 >
1#
0)
1&
#785
b1100 ?
1)
#790
0)
#795
1;
b1110 8
b1010 5
b1100 6
b1100 @
1)
#800
0)
0&
#805
1$
1)
#810
0)
#815
1)
#820
0)
1&
#825
1)
#830
0)
#835
1)
#840
0)
0&
#845
1)
#850
0)
#855
1)
#860
0)
1&
#865
1)
#870
0)
#875
1)
#880
0)
0&
#885
1)
#890
0)
#895
1)
#900
0'
0)
1&
#905
1)
#910
0)
#915
1)
#920
0)
0&
#925
1)
#930
0)
#935
1)
#940
0)
1&
#945
1)
#950
0)
#955
1)
#960
0)
0&
#965
1)
#970
0)
#975
1)
#980
0)
1&
#985
1)
#990
0)
#995
1)
#1000
0)
0&
#1005
1)
#1010
0)
#1015
1)
#1020
0)
1&
#1025
1)
#1030
0)
#1035
1)
#1040
0)
0&
#1045
1)
#1050
0)
#1055
1)
#1060
0)
1&
#1065
1)
#1070
0)
#1075
1)
#1080
0)
0&
#1085
1)
#1090
0)
#1095
1)
#1100
0)
1&
#1105
1)
#1110
0)
#1115
1)
#1120
0)
0&
#1125
1)
#1130
0)
#1135
1)
#1140
0)
1&
#1145
1)
#1150
0)
#1155
1)
#1160
0)
0&
#1165
1)
#1170
0)
#1175
1)
#1180
0)
1&
#1185
1)
#1190
0)
#1195
1)
#1200
0)
0&
#1205
1)
#1210
0)
#1215
1)
#1220
0)
1&
#1225
1)
#1230
0)
#1235
1)
#1240
0)
0&
#1245
1)
#1250
0)
#1255
1)
#1260
0)
1&
#1265
1)
#1270
0)
#1275
1)
#1280
0)
0&
#1285
1)
#1290
0)
#1295
1)
#1300
0)
1&
#1305
1)
#1310
0)
#1315
1)
#1320
0)
0&
#1325
1)
#1330
0)
#1335
1)
#1340
0)
1&
#1345
1)
#1350
0)
#1355
1)
#1360
0)
0&
#1365
1)
#1370
0)
#1375
1)
#1380
0)
1&
#1385
1)
#1390
0)
#1395
1)
#1400
0)
0&
#1405
1)
#1410
0)
#1415
1)
#1420
0)
1&
#1425
1)
#1430
0)
#1435
1)
#1440
0)
0&
#1445
1)
#1450
0)
#1455
1)
#1460
0)
1&
#1465
1)
#1470
0)
#1475
1)
#1480
0)
0&
#1485
1)
#1490
0)
#1495
1)
#1500
0)
1&
#1505
1)
#1510
0)
#1515
1)
#1520
0)
0&
#1525
1)
#1530
0)
#1535
1)
#1540
0)
1&
#1545
1)
#1550
0)
#1555
1)
#1560
0)
0&
#1565
1)
#1570
0)
#1575
1)
#1580
0)
1&
#1585
1)
#1590
0)
#1595
1)
#1600
0)
0&
#1605
1)
#1610
0)
#1615
1)
#1620
0)
1&
#1625
1)
#1630
0)
#1635
1)
#1640
0)
0&
#1645
1)
#1650
0)
#1655
1)
#1660
0)
1&
#1665
1)
#1670
0)
#1675
1)
#1680
0)
0&
#1685
1)
#1690
0)
#1695
1)
#1700
0)
1&
#1705
1)
#1710
0)
#1715
1)
#1720
0)
0&
#1725
1)
#1730
0)
#1735
1)
#1740
0)
1&
#1745
1)
#1750
0)
#1755
1)
#1760
0)
0&
#1765
1)
#1770
0)
#1775
1)
#1780
0)
1&
#1785
1)
#1790
0)
#1795
1)
#1800
0)
0&
#1805
1)
#1810
0)
#1815
1)
#1820
0)
1&
#1825
1)
#1830
0)
#1835
1)
#1840
0)
0&
#1845
1)
#1850
0)
#1855
1)
#1860
0)
1&
#1865
1)
#1870
0)
#1875
1)
#1880
0)
0&
#1885
1)
#1890
0)
#1895
1)
#1900
0)
1&
